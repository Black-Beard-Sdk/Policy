// Generated from f:/srcs/Policy/src/Black.Beard.Sdk.Policy/Policies/Parser/Grammar/PolicyLexer.g4 by ANTLR 4.13.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class PolicyLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		TRUE=1, FALSE=2, PLUS=3, DOT=4, COLON=5, NOT=6, PARENT_LEFT=7, PARENT_RIGHT=8, 
		BRACKET_LEFT=9, BRACKET_RIGHT=10, EQUAL=11, INEQUAL=12, GREATER=13, LESSER=14, 
		GREATER_EQUAL=15, LESSER_EQUAL=16, OR=17, AND=18, COMMA=19, HAS=20, HAS_NOT=21, 
		IN=22, NOT_IN=23, ALIAS=24, POLICY=25, STRING=26, MULTI_LINE_COMMENT=27, 
		SINGLE_QUOTE_CODE_STRING=28, INT=29, ID=30, IDQUOTED=31, VARIABLE_NAME=32, 
		IDLOWCASE=33;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"TRUE", "FALSE", "PLUS", "DOT", "COLON", "NOT", "PARENT_LEFT", "PARENT_RIGHT", 
			"BRACKET_LEFT", "BRACKET_RIGHT", "EQUAL", "INEQUAL", "GREATER", "LESSER", 
			"GREATER_EQUAL", "LESSER_EQUAL", "OR", "AND", "COMMA", "HAS", "HAS_NOT", 
			"IN", "NOT_IN", "ALIAS", "POLICY", "ESC", "STRING", "MULTI_LINE_COMMENT", 
			"SINGLE_QUOTE_CODE_STRING", "INT", "ID", "IDQUOTED", "VARIABLE_NAME", 
			"IDLOWCASE", "SAFECODEPOINT", "UNICODE", "HEX"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'true'", "'false'", "'+'", "'.'", "':'", "'!'", "'('", "')'", 
			"'['", "']'", "'='", "'!='", "'>'", "'<'", "'>='", "'<='", "'|'", "'&'", 
			"','", "'has'", "'!has'", "'in'", "'!in'", "'alias'", "'policy'", null, 
			null, "'''"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "TRUE", "FALSE", "PLUS", "DOT", "COLON", "NOT", "PARENT_LEFT", 
			"PARENT_RIGHT", "BRACKET_LEFT", "BRACKET_RIGHT", "EQUAL", "INEQUAL", 
			"GREATER", "LESSER", "GREATER_EQUAL", "LESSER_EQUAL", "OR", "AND", "COMMA", 
			"HAS", "HAS_NOT", "IN", "NOT_IN", "ALIAS", "POLICY", "STRING", "MULTI_LINE_COMMENT", 
			"SINGLE_QUOTE_CODE_STRING", "INT", "ID", "IDQUOTED", "VARIABLE_NAME", 
			"IDLOWCASE"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public PolicyLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "PolicyLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000!\u00e1\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0003"+
		"\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0006"+
		"\u0001\u0006\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001\t\u0001\t\u0001"+
		"\n\u0001\n\u0001\u000b\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\r"+
		"\u0001\r\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001"+
		"\u000f\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001\u0012\u0001"+
		"\u0012\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0014\u0001"+
		"\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0015\u0001\u0015\u0001"+
		"\u0015\u0001\u0016\u0001\u0016\u0001\u0016\u0001\u0016\u0001\u0017\u0001"+
		"\u0017\u0001\u0017\u0001\u0017\u0001\u0017\u0001\u0017\u0001\u0018\u0001"+
		"\u0018\u0001\u0018\u0001\u0018\u0001\u0018\u0001\u0018\u0001\u0018\u0001"+
		"\u0019\u0001\u0019\u0001\u0019\u0003\u0019\u009c\b\u0019\u0001\u001a\u0001"+
		"\u001a\u0001\u001a\u0005\u001a\u00a1\b\u001a\n\u001a\f\u001a\u00a4\t\u001a"+
		"\u0001\u001a\u0001\u001a\u0001\u001b\u0001\u001b\u0001\u001b\u0001\u001b"+
		"\u0005\u001b\u00ac\b\u001b\n\u001b\f\u001b\u00af\t\u001b\u0001\u001b\u0001"+
		"\u001b\u0001\u001b\u0001\u001b\u0001\u001b\u0001\u001c\u0001\u001c\u0001"+
		"\u001d\u0004\u001d\u00b9\b\u001d\u000b\u001d\f\u001d\u00ba\u0001\u001e"+
		"\u0001\u001e\u0005\u001e\u00bf\b\u001e\n\u001e\f\u001e\u00c2\t\u001e\u0001"+
		"\u001f\u0001\u001f\u0001\u001f\u0001\u001f\u0001 \u0001 \u0005 \u00ca"+
		"\b \n \f \u00cd\t \u0001 \u0001 \u0001!\u0001!\u0005!\u00d3\b!\n!\f!\u00d6"+
		"\t!\u0001\"\u0001\"\u0001#\u0001#\u0001#\u0001#\u0001#\u0001#\u0001$\u0001"+
		"$\u0001\u00ad\u0000%\u0001\u0001\u0003\u0002\u0005\u0003\u0007\u0004\t"+
		"\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\n\u0015\u000b\u0017\f"+
		"\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011#\u0012%\u0013\'\u0014"+
		")\u0015+\u0016-\u0017/\u00181\u00193\u00005\u001a7\u001b9\u001c;\u001d"+
		"=\u001e?\u001fA C!E\u0000G\u0000I\u0000\u0001\u0000\b\b\u0000\"\"//\\"+
		"\\bbffnnrrtt\u0001\u000009\u0003\u0000AZ__az\u0004\u000009AZ__az\u0002"+
		"\u0000__az\u0003\u000009__az\u0003\u0000\u0000\u001f\"\"\\\\\u0003\u0000"+
		"09AFaf\u00e4\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003\u0001\u0000"+
		"\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000"+
		"\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000"+
		"\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000"+
		"\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000"+
		"\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000"+
		"\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000"+
		"\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000"+
		"\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000%"+
		"\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000)\u0001"+
		"\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0000-\u0001\u0000\u0000"+
		"\u0000\u0000/\u0001\u0000\u0000\u0000\u00001\u0001\u0000\u0000\u0000\u0000"+
		"5\u0001\u0000\u0000\u0000\u00007\u0001\u0000\u0000\u0000\u00009\u0001"+
		"\u0000\u0000\u0000\u0000;\u0001\u0000\u0000\u0000\u0000=\u0001\u0000\u0000"+
		"\u0000\u0000?\u0001\u0000\u0000\u0000\u0000A\u0001\u0000\u0000\u0000\u0000"+
		"C\u0001\u0000\u0000\u0000\u0001K\u0001\u0000\u0000\u0000\u0003P\u0001"+
		"\u0000\u0000\u0000\u0005V\u0001\u0000\u0000\u0000\u0007X\u0001\u0000\u0000"+
		"\u0000\tZ\u0001\u0000\u0000\u0000\u000b\\\u0001\u0000\u0000\u0000\r^\u0001"+
		"\u0000\u0000\u0000\u000f`\u0001\u0000\u0000\u0000\u0011b\u0001\u0000\u0000"+
		"\u0000\u0013d\u0001\u0000\u0000\u0000\u0015f\u0001\u0000\u0000\u0000\u0017"+
		"h\u0001\u0000\u0000\u0000\u0019k\u0001\u0000\u0000\u0000\u001bm\u0001"+
		"\u0000\u0000\u0000\u001do\u0001\u0000\u0000\u0000\u001fr\u0001\u0000\u0000"+
		"\u0000!u\u0001\u0000\u0000\u0000#w\u0001\u0000\u0000\u0000%y\u0001\u0000"+
		"\u0000\u0000\'{\u0001\u0000\u0000\u0000)\u007f\u0001\u0000\u0000\u0000"+
		"+\u0084\u0001\u0000\u0000\u0000-\u0087\u0001\u0000\u0000\u0000/\u008b"+
		"\u0001\u0000\u0000\u00001\u0091\u0001\u0000\u0000\u00003\u0098\u0001\u0000"+
		"\u0000\u00005\u009d\u0001\u0000\u0000\u00007\u00a7\u0001\u0000\u0000\u0000"+
		"9\u00b5\u0001\u0000\u0000\u0000;\u00b8\u0001\u0000\u0000\u0000=\u00bc"+
		"\u0001\u0000\u0000\u0000?\u00c3\u0001\u0000\u0000\u0000A\u00c7\u0001\u0000"+
		"\u0000\u0000C\u00d0\u0001\u0000\u0000\u0000E\u00d7\u0001\u0000\u0000\u0000"+
		"G\u00d9\u0001\u0000\u0000\u0000I\u00df\u0001\u0000\u0000\u0000KL\u0005"+
		"t\u0000\u0000LM\u0005r\u0000\u0000MN\u0005u\u0000\u0000NO\u0005e\u0000"+
		"\u0000O\u0002\u0001\u0000\u0000\u0000PQ\u0005f\u0000\u0000QR\u0005a\u0000"+
		"\u0000RS\u0005l\u0000\u0000ST\u0005s\u0000\u0000TU\u0005e\u0000\u0000"+
		"U\u0004\u0001\u0000\u0000\u0000VW\u0005+\u0000\u0000W\u0006\u0001\u0000"+
		"\u0000\u0000XY\u0005.\u0000\u0000Y\b\u0001\u0000\u0000\u0000Z[\u0005:"+
		"\u0000\u0000[\n\u0001\u0000\u0000\u0000\\]\u0005!\u0000\u0000]\f\u0001"+
		"\u0000\u0000\u0000^_\u0005(\u0000\u0000_\u000e\u0001\u0000\u0000\u0000"+
		"`a\u0005)\u0000\u0000a\u0010\u0001\u0000\u0000\u0000bc\u0005[\u0000\u0000"+
		"c\u0012\u0001\u0000\u0000\u0000de\u0005]\u0000\u0000e\u0014\u0001\u0000"+
		"\u0000\u0000fg\u0005=\u0000\u0000g\u0016\u0001\u0000\u0000\u0000hi\u0005"+
		"!\u0000\u0000ij\u0005=\u0000\u0000j\u0018\u0001\u0000\u0000\u0000kl\u0005"+
		">\u0000\u0000l\u001a\u0001\u0000\u0000\u0000mn\u0005<\u0000\u0000n\u001c"+
		"\u0001\u0000\u0000\u0000op\u0005>\u0000\u0000pq\u0005=\u0000\u0000q\u001e"+
		"\u0001\u0000\u0000\u0000rs\u0005<\u0000\u0000st\u0005=\u0000\u0000t \u0001"+
		"\u0000\u0000\u0000uv\u0005|\u0000\u0000v\"\u0001\u0000\u0000\u0000wx\u0005"+
		"&\u0000\u0000x$\u0001\u0000\u0000\u0000yz\u0005,\u0000\u0000z&\u0001\u0000"+
		"\u0000\u0000{|\u0005h\u0000\u0000|}\u0005a\u0000\u0000}~\u0005s\u0000"+
		"\u0000~(\u0001\u0000\u0000\u0000\u007f\u0080\u0005!\u0000\u0000\u0080"+
		"\u0081\u0005h\u0000\u0000\u0081\u0082\u0005a\u0000\u0000\u0082\u0083\u0005"+
		"s\u0000\u0000\u0083*\u0001\u0000\u0000\u0000\u0084\u0085\u0005i\u0000"+
		"\u0000\u0085\u0086\u0005n\u0000\u0000\u0086,\u0001\u0000\u0000\u0000\u0087"+
		"\u0088\u0005!\u0000\u0000\u0088\u0089\u0005i\u0000\u0000\u0089\u008a\u0005"+
		"n\u0000\u0000\u008a.\u0001\u0000\u0000\u0000\u008b\u008c\u0005a\u0000"+
		"\u0000\u008c\u008d\u0005l\u0000\u0000\u008d\u008e\u0005i\u0000\u0000\u008e"+
		"\u008f\u0005a\u0000\u0000\u008f\u0090\u0005s\u0000\u0000\u00900\u0001"+
		"\u0000\u0000\u0000\u0091\u0092\u0005p\u0000\u0000\u0092\u0093\u0005o\u0000"+
		"\u0000\u0093\u0094\u0005l\u0000\u0000\u0094\u0095\u0005i\u0000\u0000\u0095"+
		"\u0096\u0005c\u0000\u0000\u0096\u0097\u0005y\u0000\u0000\u00972\u0001"+
		"\u0000\u0000\u0000\u0098\u009b\u0005\\\u0000\u0000\u0099\u009c\u0007\u0000"+
		"\u0000\u0000\u009a\u009c\u0003G#\u0000\u009b\u0099\u0001\u0000\u0000\u0000"+
		"\u009b\u009a\u0001\u0000\u0000\u0000\u009c4\u0001\u0000\u0000\u0000\u009d"+
		"\u00a2\u0005\"\u0000\u0000\u009e\u00a1\u00033\u0019\u0000\u009f\u00a1"+
		"\u0003E\"\u0000\u00a0\u009e\u0001\u0000\u0000\u0000\u00a0\u009f\u0001"+
		"\u0000\u0000\u0000\u00a1\u00a4\u0001\u0000\u0000\u0000\u00a2\u00a0\u0001"+
		"\u0000\u0000\u0000\u00a2\u00a3\u0001\u0000\u0000\u0000\u00a3\u00a5\u0001"+
		"\u0000\u0000\u0000\u00a4\u00a2\u0001\u0000\u0000\u0000\u00a5\u00a6\u0005"+
		"\"\u0000\u0000\u00a66\u0001\u0000\u0000\u0000\u00a7\u00a8\u0005/\u0000"+
		"\u0000\u00a8\u00a9\u0005*\u0000\u0000\u00a9\u00ad\u0001\u0000\u0000\u0000"+
		"\u00aa\u00ac\t\u0000\u0000\u0000\u00ab\u00aa\u0001\u0000\u0000\u0000\u00ac"+
		"\u00af\u0001\u0000\u0000\u0000\u00ad\u00ae\u0001\u0000\u0000\u0000\u00ad"+
		"\u00ab\u0001\u0000\u0000\u0000\u00ae\u00b0\u0001\u0000\u0000\u0000\u00af"+
		"\u00ad\u0001\u0000\u0000\u0000\u00b0\u00b1\u0005*\u0000\u0000\u00b1\u00b2"+
		"\u0005/\u0000\u0000\u00b2\u00b3\u0001\u0000\u0000\u0000\u00b3\u00b4\u0006"+
		"\u001b\u0000\u0000\u00b48\u0001\u0000\u0000\u0000\u00b5\u00b6\u0005\'"+
		"\u0000\u0000\u00b6:\u0001\u0000\u0000\u0000\u00b7\u00b9\u0007\u0001\u0000"+
		"\u0000\u00b8\u00b7\u0001\u0000\u0000\u0000\u00b9\u00ba\u0001\u0000\u0000"+
		"\u0000\u00ba\u00b8\u0001\u0000\u0000\u0000\u00ba\u00bb\u0001\u0000\u0000"+
		"\u0000\u00bb<\u0001\u0000\u0000\u0000\u00bc\u00c0\u0007\u0002\u0000\u0000"+
		"\u00bd\u00bf\u0007\u0003\u0000\u0000\u00be\u00bd\u0001\u0000\u0000\u0000"+
		"\u00bf\u00c2\u0001\u0000\u0000\u0000\u00c0\u00be\u0001\u0000\u0000\u0000"+
		"\u00c0\u00c1\u0001\u0000\u0000\u0000\u00c1>\u0001\u0000\u0000\u0000\u00c2"+
		"\u00c0\u0001\u0000\u0000\u0000\u00c3\u00c4\u0005\'\u0000\u0000\u00c4\u00c5"+
		"\u0003=\u001e\u0000\u00c5\u00c6\u0005\'\u0000\u0000\u00c6@\u0001\u0000"+
		"\u0000\u0000\u00c7\u00cb\u0007\u0002\u0000\u0000\u00c8\u00ca\u0007\u0003"+
		"\u0000\u0000\u00c9\u00c8\u0001\u0000\u0000\u0000\u00ca\u00cd\u0001\u0000"+
		"\u0000\u0000\u00cb\u00c9\u0001\u0000\u0000\u0000\u00cb\u00cc\u0001\u0000"+
		"\u0000\u0000\u00cc\u00ce\u0001\u0000\u0000\u0000\u00cd\u00cb\u0001\u0000"+
		"\u0000\u0000\u00ce\u00cf\u0003\t\u0004\u0000\u00cfB\u0001\u0000\u0000"+
		"\u0000\u00d0\u00d4\u0007\u0004\u0000\u0000\u00d1\u00d3\u0007\u0005\u0000"+
		"\u0000\u00d2\u00d1\u0001\u0000\u0000\u0000\u00d3\u00d6\u0001\u0000\u0000"+
		"\u0000\u00d4\u00d2\u0001\u0000\u0000\u0000\u00d4\u00d5\u0001\u0000\u0000"+
		"\u0000\u00d5D\u0001\u0000\u0000\u0000\u00d6\u00d4\u0001\u0000\u0000\u0000"+
		"\u00d7\u00d8\b\u0006\u0000\u0000\u00d8F\u0001\u0000\u0000\u0000\u00d9"+
		"\u00da\u0005u\u0000\u0000\u00da\u00db\u0003I$\u0000\u00db\u00dc\u0003"+
		"I$\u0000\u00dc\u00dd\u0003I$\u0000\u00dd\u00de\u0003I$\u0000\u00deH\u0001"+
		"\u0000\u0000\u0000\u00df\u00e0\u0007\u0007\u0000\u0000\u00e0J\u0001\u0000"+
		"\u0000\u0000\t\u0000\u009b\u00a0\u00a2\u00ad\u00ba\u00c0\u00cb\u00d4\u0001"+
		"\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}
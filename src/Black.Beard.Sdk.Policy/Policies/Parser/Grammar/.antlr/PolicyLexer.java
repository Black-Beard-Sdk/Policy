// Generated from f:/srcs/Policy/src/Black.Beard.Sdk.Policy/Policies/Parser/Grammar/PolicyLexer.g4 by ANTLR 4.13.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class PolicyLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		TRUE=1, FALSE=2, PLUS=3, DOT=4, COLON=5, NOT=6, PARENT_LEFT=7, PARENT_RIGHT=8, 
		BRACKET_LEFT=9, BRACKET_RIGHT=10, EQUAL=11, INEQUAL=12, OR=13, AND=14, 
		COMMA=15, HAS=16, HAS_NOT=17, IN=18, NOT_IN=19, ALIAS=20, POLICY=21, INHERIT=22, 
		STRING=23, MULTI_LINE_COMMENT=24, SINGLE_QUOTE_CODE_STRING=25, ID=26, 
		IDQUOTED=27, VARIABLE_NAME=28, IDLOWCASE=29;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"TRUE", "FALSE", "PLUS", "DOT", "COLON", "NOT", "PARENT_LEFT", "PARENT_RIGHT", 
			"BRACKET_LEFT", "BRACKET_RIGHT", "EQUAL", "INEQUAL", "OR", "AND", "COMMA", 
			"HAS", "HAS_NOT", "IN", "NOT_IN", "ALIAS", "POLICY", "INHERIT", "ESC", 
			"STRING", "MULTI_LINE_COMMENT", "SINGLE_QUOTE_CODE_STRING", "ID", "IDQUOTED", 
			"VARIABLE_NAME", "IDLOWCASE", "SAFECODEPOINT", "UNICODE", "HEX"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'true'", "'false'", "'+'", "'.'", "':'", "'!'", "'('", "')'", 
			"'['", "']'", "'='", "'!='", "'|'", "'&'", "','", "'has'", "'!has'", 
			"'in'", "'!in'", "'alias'", "'policy'", "'inherit'", null, null, "'''"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "TRUE", "FALSE", "PLUS", "DOT", "COLON", "NOT", "PARENT_LEFT", 
			"PARENT_RIGHT", "BRACKET_LEFT", "BRACKET_RIGHT", "EQUAL", "INEQUAL", 
			"OR", "AND", "COMMA", "HAS", "HAS_NOT", "IN", "NOT_IN", "ALIAS", "POLICY", 
			"INHERIT", "STRING", "MULTI_LINE_COMMENT", "SINGLE_QUOTE_CODE_STRING", 
			"ID", "IDQUOTED", "VARIABLE_NAME", "IDLOWCASE"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public PolicyLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "PolicyLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u001d\u00d2\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0002\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017"+
		"\u0002\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a"+
		"\u0002\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d"+
		"\u0002\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002"+
		"\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005"+
		"\u0001\u0006\u0001\u0006\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001"+
		"\t\u0001\t\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001\u000b\u0001\f"+
		"\u0001\f\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f"+
		"\u0001\u000f\u0001\u000f\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010"+
		"\u0001\u0010\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0012\u0001\u0012"+
		"\u0001\u0012\u0001\u0012\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0013"+
		"\u0001\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0014"+
		"\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0015\u0001\u0015\u0001\u0015"+
		"\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0016"+
		"\u0001\u0016\u0001\u0016\u0003\u0016\u0092\b\u0016\u0001\u0017\u0001\u0017"+
		"\u0001\u0017\u0005\u0017\u0097\b\u0017\n\u0017\f\u0017\u009a\t\u0017\u0001"+
		"\u0017\u0001\u0017\u0001\u0018\u0001\u0018\u0001\u0018\u0001\u0018\u0005"+
		"\u0018\u00a2\b\u0018\n\u0018\f\u0018\u00a5\t\u0018\u0001\u0018\u0001\u0018"+
		"\u0001\u0018\u0001\u0018\u0001\u0018\u0001\u0019\u0001\u0019\u0001\u001a"+
		"\u0001\u001a\u0005\u001a\u00b0\b\u001a\n\u001a\f\u001a\u00b3\t\u001a\u0001"+
		"\u001b\u0001\u001b\u0001\u001b\u0001\u001b\u0001\u001c\u0001\u001c\u0005"+
		"\u001c\u00bb\b\u001c\n\u001c\f\u001c\u00be\t\u001c\u0001\u001c\u0001\u001c"+
		"\u0001\u001d\u0001\u001d\u0005\u001d\u00c4\b\u001d\n\u001d\f\u001d\u00c7"+
		"\t\u001d\u0001\u001e\u0001\u001e\u0001\u001f\u0001\u001f\u0001\u001f\u0001"+
		"\u001f\u0001\u001f\u0001\u001f\u0001 \u0001 \u0001\u00a3\u0000!\u0001"+
		"\u0001\u0003\u0002\u0005\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007"+
		"\u000f\b\u0011\t\u0013\n\u0015\u000b\u0017\f\u0019\r\u001b\u000e\u001d"+
		"\u000f\u001f\u0010!\u0011#\u0012%\u0013\'\u0014)\u0015+\u0016-\u0000/"+
		"\u00171\u00183\u00195\u001a7\u001b9\u001c;\u001d=\u0000?\u0000A\u0000"+
		"\u0001\u0000\u0007\b\u0000\"\"//\\\\bbffnnrrtt\u0003\u0000AZ__az\u0004"+
		"\u000009AZ__az\u0002\u0000__az\u0003\u000009__az\u0003\u0000\u0000\u001f"+
		"\"\"\\\\\u0003\u000009AFaf\u00d4\u0000\u0001\u0001\u0000\u0000\u0000\u0000"+
		"\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000"+
		"\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b"+
		"\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001"+
		"\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001"+
		"\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001"+
		"\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001"+
		"\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001"+
		"\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000"+
		"\u0000\u0000%\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000\u0000"+
		"\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0000/"+
		"\u0001\u0000\u0000\u0000\u00001\u0001\u0000\u0000\u0000\u00003\u0001\u0000"+
		"\u0000\u0000\u00005\u0001\u0000\u0000\u0000\u00007\u0001\u0000\u0000\u0000"+
		"\u00009\u0001\u0000\u0000\u0000\u0000;\u0001\u0000\u0000\u0000\u0001C"+
		"\u0001\u0000\u0000\u0000\u0003H\u0001\u0000\u0000\u0000\u0005N\u0001\u0000"+
		"\u0000\u0000\u0007P\u0001\u0000\u0000\u0000\tR\u0001\u0000\u0000\u0000"+
		"\u000bT\u0001\u0000\u0000\u0000\rV\u0001\u0000\u0000\u0000\u000fX\u0001"+
		"\u0000\u0000\u0000\u0011Z\u0001\u0000\u0000\u0000\u0013\\\u0001\u0000"+
		"\u0000\u0000\u0015^\u0001\u0000\u0000\u0000\u0017`\u0001\u0000\u0000\u0000"+
		"\u0019c\u0001\u0000\u0000\u0000\u001be\u0001\u0000\u0000\u0000\u001dg"+
		"\u0001\u0000\u0000\u0000\u001fi\u0001\u0000\u0000\u0000!m\u0001\u0000"+
		"\u0000\u0000#r\u0001\u0000\u0000\u0000%u\u0001\u0000\u0000\u0000\'y\u0001"+
		"\u0000\u0000\u0000)\u007f\u0001\u0000\u0000\u0000+\u0086\u0001\u0000\u0000"+
		"\u0000-\u008e\u0001\u0000\u0000\u0000/\u0093\u0001\u0000\u0000\u00001"+
		"\u009d\u0001\u0000\u0000\u00003\u00ab\u0001\u0000\u0000\u00005\u00ad\u0001"+
		"\u0000\u0000\u00007\u00b4\u0001\u0000\u0000\u00009\u00b8\u0001\u0000\u0000"+
		"\u0000;\u00c1\u0001\u0000\u0000\u0000=\u00c8\u0001\u0000\u0000\u0000?"+
		"\u00ca\u0001\u0000\u0000\u0000A\u00d0\u0001\u0000\u0000\u0000CD\u0005"+
		"t\u0000\u0000DE\u0005r\u0000\u0000EF\u0005u\u0000\u0000FG\u0005e\u0000"+
		"\u0000G\u0002\u0001\u0000\u0000\u0000HI\u0005f\u0000\u0000IJ\u0005a\u0000"+
		"\u0000JK\u0005l\u0000\u0000KL\u0005s\u0000\u0000LM\u0005e\u0000\u0000"+
		"M\u0004\u0001\u0000\u0000\u0000NO\u0005+\u0000\u0000O\u0006\u0001\u0000"+
		"\u0000\u0000PQ\u0005.\u0000\u0000Q\b\u0001\u0000\u0000\u0000RS\u0005:"+
		"\u0000\u0000S\n\u0001\u0000\u0000\u0000TU\u0005!\u0000\u0000U\f\u0001"+
		"\u0000\u0000\u0000VW\u0005(\u0000\u0000W\u000e\u0001\u0000\u0000\u0000"+
		"XY\u0005)\u0000\u0000Y\u0010\u0001\u0000\u0000\u0000Z[\u0005[\u0000\u0000"+
		"[\u0012\u0001\u0000\u0000\u0000\\]\u0005]\u0000\u0000]\u0014\u0001\u0000"+
		"\u0000\u0000^_\u0005=\u0000\u0000_\u0016\u0001\u0000\u0000\u0000`a\u0005"+
		"!\u0000\u0000ab\u0005=\u0000\u0000b\u0018\u0001\u0000\u0000\u0000cd\u0005"+
		"|\u0000\u0000d\u001a\u0001\u0000\u0000\u0000ef\u0005&\u0000\u0000f\u001c"+
		"\u0001\u0000\u0000\u0000gh\u0005,\u0000\u0000h\u001e\u0001\u0000\u0000"+
		"\u0000ij\u0005h\u0000\u0000jk\u0005a\u0000\u0000kl\u0005s\u0000\u0000"+
		"l \u0001\u0000\u0000\u0000mn\u0005!\u0000\u0000no\u0005h\u0000\u0000o"+
		"p\u0005a\u0000\u0000pq\u0005s\u0000\u0000q\"\u0001\u0000\u0000\u0000r"+
		"s\u0005i\u0000\u0000st\u0005n\u0000\u0000t$\u0001\u0000\u0000\u0000uv"+
		"\u0005!\u0000\u0000vw\u0005i\u0000\u0000wx\u0005n\u0000\u0000x&\u0001"+
		"\u0000\u0000\u0000yz\u0005a\u0000\u0000z{\u0005l\u0000\u0000{|\u0005i"+
		"\u0000\u0000|}\u0005a\u0000\u0000}~\u0005s\u0000\u0000~(\u0001\u0000\u0000"+
		"\u0000\u007f\u0080\u0005p\u0000\u0000\u0080\u0081\u0005o\u0000\u0000\u0081"+
		"\u0082\u0005l\u0000\u0000\u0082\u0083\u0005i\u0000\u0000\u0083\u0084\u0005"+
		"c\u0000\u0000\u0084\u0085\u0005y\u0000\u0000\u0085*\u0001\u0000\u0000"+
		"\u0000\u0086\u0087\u0005i\u0000\u0000\u0087\u0088\u0005n\u0000\u0000\u0088"+
		"\u0089\u0005h\u0000\u0000\u0089\u008a\u0005e\u0000\u0000\u008a\u008b\u0005"+
		"r\u0000\u0000\u008b\u008c\u0005i\u0000\u0000\u008c\u008d\u0005t\u0000"+
		"\u0000\u008d,\u0001\u0000\u0000\u0000\u008e\u0091\u0005\\\u0000\u0000"+
		"\u008f\u0092\u0007\u0000\u0000\u0000\u0090\u0092\u0003?\u001f\u0000\u0091"+
		"\u008f\u0001\u0000\u0000\u0000\u0091\u0090\u0001\u0000\u0000\u0000\u0092"+
		".\u0001\u0000\u0000\u0000\u0093\u0098\u0005\"\u0000\u0000\u0094\u0097"+
		"\u0003-\u0016\u0000\u0095\u0097\u0003=\u001e\u0000\u0096\u0094\u0001\u0000"+
		"\u0000\u0000\u0096\u0095\u0001\u0000\u0000\u0000\u0097\u009a\u0001\u0000"+
		"\u0000\u0000\u0098\u0096\u0001\u0000\u0000\u0000\u0098\u0099\u0001\u0000"+
		"\u0000\u0000\u0099\u009b\u0001\u0000\u0000\u0000\u009a\u0098\u0001\u0000"+
		"\u0000\u0000\u009b\u009c\u0005\"\u0000\u0000\u009c0\u0001\u0000\u0000"+
		"\u0000\u009d\u009e\u0005/\u0000\u0000\u009e\u009f\u0005*\u0000\u0000\u009f"+
		"\u00a3\u0001\u0000\u0000\u0000\u00a0\u00a2\t\u0000\u0000\u0000\u00a1\u00a0"+
		"\u0001\u0000\u0000\u0000\u00a2\u00a5\u0001\u0000\u0000\u0000\u00a3\u00a4"+
		"\u0001\u0000\u0000\u0000\u00a3\u00a1\u0001\u0000\u0000\u0000\u00a4\u00a6"+
		"\u0001\u0000\u0000\u0000\u00a5\u00a3\u0001\u0000\u0000\u0000\u00a6\u00a7"+
		"\u0005*\u0000\u0000\u00a7\u00a8\u0005/\u0000\u0000\u00a8\u00a9\u0001\u0000"+
		"\u0000\u0000\u00a9\u00aa\u0006\u0018\u0000\u0000\u00aa2\u0001\u0000\u0000"+
		"\u0000\u00ab\u00ac\u0005\'\u0000\u0000\u00ac4\u0001\u0000\u0000\u0000"+
		"\u00ad\u00b1\u0007\u0001\u0000\u0000\u00ae\u00b0\u0007\u0002\u0000\u0000"+
		"\u00af\u00ae\u0001\u0000\u0000\u0000\u00b0\u00b3\u0001\u0000\u0000\u0000"+
		"\u00b1\u00af\u0001\u0000\u0000\u0000\u00b1\u00b2\u0001\u0000\u0000\u0000"+
		"\u00b26\u0001\u0000\u0000\u0000\u00b3\u00b1\u0001\u0000\u0000\u0000\u00b4"+
		"\u00b5\u0005\'\u0000\u0000\u00b5\u00b6\u00035\u001a\u0000\u00b6\u00b7"+
		"\u0005\'\u0000\u0000\u00b78\u0001\u0000\u0000\u0000\u00b8\u00bc\u0007"+
		"\u0001\u0000\u0000\u00b9\u00bb\u0007\u0002\u0000\u0000\u00ba\u00b9\u0001"+
		"\u0000\u0000\u0000\u00bb\u00be\u0001\u0000\u0000\u0000\u00bc\u00ba\u0001"+
		"\u0000\u0000\u0000\u00bc\u00bd\u0001\u0000\u0000\u0000\u00bd\u00bf\u0001"+
		"\u0000\u0000\u0000\u00be\u00bc\u0001\u0000\u0000\u0000\u00bf\u00c0\u0003"+
		"\t\u0004\u0000\u00c0:\u0001\u0000\u0000\u0000\u00c1\u00c5\u0007\u0003"+
		"\u0000\u0000\u00c2\u00c4\u0007\u0004\u0000\u0000\u00c3\u00c2\u0001\u0000"+
		"\u0000\u0000\u00c4\u00c7\u0001\u0000\u0000\u0000\u00c5\u00c3\u0001\u0000"+
		"\u0000\u0000\u00c5\u00c6\u0001\u0000\u0000\u0000\u00c6<\u0001\u0000\u0000"+
		"\u0000\u00c7\u00c5\u0001\u0000\u0000\u0000\u00c8\u00c9\b\u0005\u0000\u0000"+
		"\u00c9>\u0001\u0000\u0000\u0000\u00ca\u00cb\u0005u\u0000\u0000\u00cb\u00cc"+
		"\u0003A \u0000\u00cc\u00cd\u0003A \u0000\u00cd\u00ce\u0003A \u0000\u00ce"+
		"\u00cf\u0003A \u0000\u00cf@\u0001\u0000\u0000\u0000\u00d0\u00d1\u0007"+
		"\u0006\u0000\u0000\u00d1B\u0001\u0000\u0000\u0000\b\u0000\u0091\u0096"+
		"\u0098\u00a3\u00b1\u00bc\u00c5\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}
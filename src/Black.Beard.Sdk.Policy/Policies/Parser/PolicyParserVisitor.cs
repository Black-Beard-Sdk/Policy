//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from PolicyParser.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Bb.Policies.Parser {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="PolicyParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface IPolicyParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="PolicyParser.script"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitScript([NotNull] PolicyParser.ScriptContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PolicyParser.pair"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPair([NotNull] PolicyParser.PairContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PolicyParser.pair_alias"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPair_alias([NotNull] PolicyParser.Pair_aliasContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PolicyParser.pair_policy"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPair_policy([NotNull] PolicyParser.Pair_policyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PolicyParser.inherit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInherit([NotNull] PolicyParser.InheritContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PolicyParser.categories"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCategories([NotNull] PolicyParser.CategoriesContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PolicyParser.array"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArray([NotNull] PolicyParser.ArrayContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PolicyParser.operationBoolean"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperationBoolean([NotNull] PolicyParser.OperationBooleanContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PolicyParser.operationEqual"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperationEqual([NotNull] PolicyParser.OperationEqualContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PolicyParser.operationContains"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperationContains([NotNull] PolicyParser.OperationContainsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PolicyParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] PolicyParser.ExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PolicyParser.value_ref"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValue_ref([NotNull] PolicyParser.Value_refContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PolicyParser.source"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSource([NotNull] PolicyParser.SourceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PolicyParser.string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitString([NotNull] PolicyParser.StringContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PolicyParser.alias_id"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAlias_id([NotNull] PolicyParser.Alias_idContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PolicyParser.policy_id"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPolicy_id([NotNull] PolicyParser.Policy_idContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PolicyParser.policy_ref"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPolicy_ref([NotNull] PolicyParser.Policy_refContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PolicyParser.key_ref"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitKey_ref([NotNull] PolicyParser.Key_refContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PolicyParser.category"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCategory([NotNull] PolicyParser.CategoryContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PolicyParser.boolean"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolean([NotNull] PolicyParser.BooleanContext context);
}
} // namespace Bb.Policies.Parser
